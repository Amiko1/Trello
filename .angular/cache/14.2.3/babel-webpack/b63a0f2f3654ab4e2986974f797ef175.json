{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/amira/OneDrive/Desktop/section-8-8-COMPLETE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\nimport { ActivatedRoute } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tasks.service\";\nimport * as i2 from \"src/app/services/modal.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/columns.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/cdk/scrolling\";\nimport * as i7 from \"@angular/cdk/drag-drop\";\nimport * as i8 from \"../column-modal/column-modal.component\";\nimport * as i9 from \"../tasks-modal/tasks-modal.component\";\nimport * as i10 from \"../tasks/tasks.component\";\n\nfunction ColumnComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"p\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ColumnComponent_div_4_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const column_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openTaskModal(column_r1._id));\n    });\n    i0.ɵɵtext(4, \"Create Task \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"app-tasks\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", column_r1.title, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"boardId\", ctx_r0.boardsId)(\"columnId\", column_r1._id);\n  }\n}\n\nexport class ColumnComponent {\n  constructor(tasksService, modal, route, columnService) {\n    this.tasksService = tasksService;\n    this.modal = modal;\n    this.route = route;\n    this.columnService = columnService;\n  }\n\n  ngOnInit() {\n    this.boardsId = this.route.snapshot.params['boardsId'];\n    this.getColumns();\n  }\n\n  drop(event) {\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\n    this.updateColumnSet();\n  }\n\n  openModal() {\n    this.modal.toggleModal('addColumn');\n  }\n\n  openTaskModal(columnId) {\n    this.modal.toggleModal('addTasks');\n    this.modal.temp.next(columnId);\n  }\n\n  getColumns() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.columnService.getColumns(_this.boardsId);\n\n      _this.columnService.columns.subscribe(col => {\n        _this.columns = col.sort((a, b) => a.order > b.order ? 1 : -1);\n      });\n    })();\n  }\n\n  updateColumnSet() {\n    const updatedColumns = this.columns.map((col, index) => {\n      col.order = ++index;\n      return {\n        order: col.order,\n        _id: col._id\n      };\n    });\n    this.columnService.updateColumnSet(updatedColumns).subscribe(res => console.log(res));\n  }\n\n}\n\nColumnComponent.ɵfac = function ColumnComponent_Factory(t) {\n  return new (t || ColumnComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.ModalService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.ColumnsService));\n};\n\nColumnComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ColumnComponent,\n  selectors: [[\"app-column\"]],\n  decls: 7,\n  vars: 3,\n  consts: [[1, \"flex\", \"ml-auto\", \"mr-auto\", \"justify-center\", \"items-center\", \"border\", \"cursor-pointer\", \"opacity-70\", \"hover:opacity-100\", \"border-dotted\", \"text-center\", \"mt-10\", \"mx-20\", \"py-4\", \"w-1/5\", 3, \"click\"], [\"cdkScrollable\", \"\", 1, \"wrapper\"], [\"cdkDropList\", \"\", \"cdkDropListOrientation\", \"horizontal\", 1, \"example-list\", \"px-20\", \"pt-10\", \"mt-10\", \"flex\", \"gap-4\", 3, \"cdkDropListDropped\"], [\"class\", \"example-box item text-center example-box rounded-lg\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [3, \"boardsId\"], [\"cdkDrag\", \"\", 1, \"example-box\", \"item\", \"text-center\", \"example-box\", \"rounded-lg\"], [1, \"mt-6\"], [1, \"task\", \"text-white\", \"mt-6\", \"py-3\", \"shadow-lg\", \"border\", \"cursor-pointer\", \"opacity-70\", \"hover:opacity-100\", \"border-dotted\", \"text-center\", \"w-4/5\", 3, \"click\"], [1, \"w-4/5\", 3, \"boardId\", \"columnId\"]],\n  template: function ColumnComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ColumnComponent_Template_button_click_0_listener() {\n        return ctx.openModal();\n      });\n      i0.ɵɵtext(1, \"Create New Column\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function ColumnComponent_Template_div_cdkDropListDropped_3_listener($event) {\n        return ctx.drop($event);\n      });\n      i0.ɵɵtemplate(4, ColumnComponent_div_4_Template, 6, 3, \"div\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"app-column-modal\", 4)(6, \"app-tasks-modal\", 4);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"boardsId\", ctx.boardsId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"boardsId\", ctx.boardsId);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.CdkScrollable, i7.CdkDropList, i7.CdkDrag, i8.ColumnModalComponent, i9.TasksModalComponent, i10.TasksComponent],\n  styles: [\".wrapper[_ngcontent-%COMP%] {\\r\\n  overflow-x: auto; \\r\\n  display: flex;\\r\\n  padding-bottom: 50px;\\r\\n}\\r\\n\\r\\n.task[_ngcontent-%COMP%] {\\r\\n  background-color: #161d31;\\r\\n}\\r\\n\\r\\n.example-box[_ngcontent-%COMP%] {\\r\\n  width: 300px;\\r\\n\\r\\n  border-bottom: solid 1px #ccc;\\r\\n  color: rgba(0, 0, 0, 0.87);\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-height: 350px;\\r\\n  align-items: center;\\r\\n  \\r\\n  box-sizing: border-box;\\r\\n  \\r\\n  background: white;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.cdk-drag-preview[_ngcontent-%COMP%] {\\r\\n  box-sizing: border-box;\\r\\n  border-radius: 4px;\\r\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\\r\\n    0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\r\\n}\\r\\n\\r\\n.cdk-drag-placeholder[_ngcontent-%COMP%] {\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.cdk-drag-animating[_ngcontent-%COMP%] {\\r\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\\r\\n.example-box[_ngcontent-%COMP%]:last-child {\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.example-list.cdk-drop-list-dragging[_ngcontent-%COMP%]   .example-box[_ngcontent-%COMP%]:not(.cdk-drag-placeholder) {\\r\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbHVtbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxZQUFZOztFQUVaLDZCQUE2QjtFQUM3QiwwQkFBMEI7RUFDMUIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixpQkFBaUI7RUFDakIsbUJBQW1COztFQUVuQixzQkFBc0I7O0VBRXRCLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQjswRUFDd0U7QUFDMUU7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxzREFBc0Q7QUFDeEQ7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxzREFBc0Q7QUFDeEQiLCJmaWxlIjoiY29sdW1uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud3JhcHBlciB7XHJcbiAgb3ZlcmZsb3cteDogYXV0bzsgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwYWRkaW5nLWJvdHRvbTogNTBweDtcclxufVxyXG5cclxuLnRhc2sge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMxNjFkMzE7XHJcbn1cclxuXHJcbi5leGFtcGxlLWJveCB7XHJcbiAgd2lkdGg6IDMwMHB4O1xyXG5cclxuICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI2NjYztcclxuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgbWluLWhlaWdodDogMzUwcHg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIFxyXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufSBcclxuXHJcbi5jZGstZHJhZy1wcmV2aWV3IHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBib3gtc2hhZG93OiAwIDVweCA1cHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMiksXHJcbiAgICAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG59XHJcblxyXG4uY2RrLWRyYWctcGxhY2Vob2xkZXIge1xyXG4gIG9wYWNpdHk6IDA7XHJcbn1cclxuXHJcbi5jZGstZHJhZy1hbmltYXRpbmcge1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yLCAxKTtcclxufVxyXG5cclxuLmV4YW1wbGUtYm94Omxhc3QtY2hpbGQge1xyXG4gIGJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuLmV4YW1wbGUtbGlzdC5jZGstZHJvcC1saXN0LWRyYWdnaW5nIC5leGFtcGxlLWJveDpub3QoLmNkay1kcmFnLXBsYWNlaG9sZGVyKSB7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpO1xyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAAsBA,eAAtB,QAA6C,wBAA7C;AAEA,SAAiBC,cAAjB,QAAiD,iBAAjD;;;;;;;;;;;;;;;;;ICMIC,+BAAwG,CAAxG,EAAwG,GAAxG,EAAwG,CAAxG;IACmBA;IAAgBA;IACjCA;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,mDAAT;IAAkC,CAAlC;IAC4HA;IAEpIA;IACAA;IACFA;;;;;;IANmBA;IAAAA;IAKNA;IAAAA,0CAAyB,UAAzB,EAAyBC,aAAzB;;;;ADHjB,OAAM,MAAOC,eAAP,CAAsB;EAE1BC,YAAoBC,YAApB,EAAwDC,KAAxD,EAAqFC,KAArF,EAAoHC,aAApH,EAAiJ;IAA7H;IAAoC;IAA6B;IAA+B;EAAkC;;EAItJC,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,MAApB,CAA2B,UAA3B,CAAhB;IACA,KAAKC,UAAL;EACD;;EAIDC,IAAI,CAACC,KAAD,EAA6B;IAE/BhB,eAAe,CAAC,KAAKiB,OAAN,EAAeD,KAAK,CAACE,aAArB,EAAoCF,KAAK,CAACG,YAA1C,CAAf;IACA,KAAKC,eAAL;EACD;;EACDC,SAAS;IACP,KAAKd,KAAL,CAAWe,WAAX,CAAuB,WAAvB;EACD;;EAEDC,aAAa,CAACC,QAAD,EAAS;IACpB,KAAKjB,KAAL,CAAWe,WAAX,CAAuB,UAAvB;IACA,KAAKf,KAAL,CAAWkB,IAAX,CAAgBC,IAAhB,CAAqBF,QAArB;EACD;;EAGIV,UAAU;IAAA;;IAAA;MACb,KAAI,CAACL,aAAL,CAAmBK,UAAnB,CAA8B,KAAI,CAACH,QAAnC;;MACA,KAAI,CAACF,aAAL,CAAmBQ,OAAnB,CAA2BU,SAA3B,CAAsCC,GAAD,IAA0E;QAE7G,KAAI,CAACX,OAAL,GAAeW,GAAG,CAACC,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAb,GAAsB,CAAtB,GAA0B,CAAC,CAA9C,CAAf;MAED,CAJD;IAFa;EAOd;;EAGDZ,eAAe;IACb,MAAMa,cAAc,GAAG,KAAKhB,OAAL,CAAaiB,GAAb,CAAiB,CAACN,GAAD,EAAMO,KAAN,KAAe;MACrDP,GAAG,CAACI,KAAJ,GAAY,EAAEG,KAAd;MACA,OAAO;QACLH,KAAK,EAAEJ,GAAG,CAACI,KADN;QAELI,GAAG,EAAER,GAAG,CAACQ;MAFJ,CAAP;IAID,CANsB,CAAvB;IAOA,KAAK3B,aAAL,CAAmBW,eAAnB,CAAmCa,cAAnC,EAAmDN,SAAnD,CAA6DU,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAApE;EAED;;AAhDyB;;;mBAAfjC,iBAAeF;AAAA;;;QAAfE;EAAeoC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ5B1C;MAAQA;QAAA,OAAS2C,eAAT;MAAoB,CAApB;MAC0J3C;MACtJA;MAIZA,+BAAmC,CAAnC,EAAmC,KAAnC,EAAmC,CAAnC;MAEIA;QAAA,OAAsB2C,gBAAtB;MAAkC,CAAlC;MACA3C;MAQFA;MAIFA,uCAA2D,CAA3D,EAA2D,iBAA3D,EAA2D,CAA3D;;;;MAZwFA;MAAAA;MAYtEA;MAAAA;MACDA;MAAAA","names":["moveItemInArray","ActivatedRoute","i0","column_r1","ColumnComponent","constructor","tasksService","modal","route","columnService","ngOnInit","boardsId","snapshot","params","getColumns","drop","event","columns","previousIndex","currentIndex","updateColumnSet","openModal","toggleModal","openTaskModal","columnId","temp","next","subscribe","col","sort","a","b","order","updatedColumns","map","index","_id","res","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\amira\\OneDrive\\Desktop\\section-8-8-COMPLETE\\src\\app\\boards\\column\\column.component.ts","C:\\Users\\amira\\OneDrive\\Desktop\\section-8-8-COMPLETE\\src\\app\\boards\\column\\column.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { ModalService } from 'src/app/services/modal.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { ColumnsService } from 'src/app/services/columns.service';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-column',\n  templateUrl: './column.component.html',\n  styleUrls: ['./column.component.css']\n})\nexport class ColumnComponent implements OnInit {\n\n  constructor(private tasksService: TasksService, private modal: ModalService, private route: ActivatedRoute, private columnService: ColumnsService) { }\n\n  boardsId: String;\n\n  ngOnInit(): void {\n    this.boardsId = this.route.snapshot.params['boardsId']\n    this.getColumns()\n  }\n\n  columns;\n\n  drop(event: CdkDragDrop<string[]>) {\n\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\n    this.updateColumnSet()\n  }\n  openModal() {\n    this.modal.toggleModal('addColumn')\n  }\n\n  openTaskModal(columnId) {\n    this.modal.toggleModal('addTasks')\n    this.modal.temp.next(columnId)\n  }\n\n\n async getColumns() {\n    this.columnService.getColumns(this.boardsId)\n    this.columnService.columns.subscribe((col: { title: string, _id: string, order: string, boardId: string }[]) => {\n     \n      this.columns = col.sort((a, b) => (a.order > b.order) ? 1 : -1)\n\n    })\n  }\n\n\n  updateColumnSet() {\n    const updatedColumns = this.columns.map((col, index) => {\n      col.order = ++index;\n      return {\n        order: col.order,\n        _id: col._id\n      }\n    })\n    this.columnService.updateColumnSet(updatedColumns).subscribe(res => console.log(res))\n\n  }\n\n\n}\n","<button (click)=\"openModal()\"\r\n  class=\"flex   ml-auto mr-auto justify-center items-center border cursor-pointer opacity-70 hover:opacity-100 border-dotted text-center mt-10 mx-20 py-4 w-1/5 \">Create\r\n  New Column</button>\r\n\r\n\r\n\r\n<div class=\"wrapper\" cdkScrollable>\r\n  <div cdkDropList cdkDropListOrientation=\"horizontal\" class=\"example-list px-20 pt-10 mt-10 flex gap-4\"\r\n    (cdkDropListDropped)=\"drop($event)\">\r\n    <div class=\"example-box item text-center example-box rounded-lg\" *ngFor=\"let column of columns\" cdkDrag>\r\n      <p class=\"mt-6\"> {{column.title}}</p>\r\n      <button (click)=\"openTaskModal(column._id)\"\r\n        class=\"task text-white mt-6 py-3 shadow-lg border cursor-pointer opacity-70 hover:opacity-100 border-dotted text-center   w-4/5 \">Create\r\n        Task\r\n      </button>\r\n      <app-tasks [boardId]=\"this.boardsId\" [columnId]=\"column._id\" class=\"w-4/5 \"></app-tasks>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<app-column-modal [boardsId]=\"boardsId\"></app-column-modal>\r\n<app-tasks-modal [boardsId]=\"boardsId\"></app-tasks-modal>"]},"metadata":{},"sourceType":"module"}