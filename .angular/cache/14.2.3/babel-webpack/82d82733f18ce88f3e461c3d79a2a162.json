{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ColumnsService = /*#__PURE__*/(() => {\n  class ColumnsService {\n    constructor(http) {\n      this.http = http;\n      this.base_url = environment.base_url;\n      this.columns = new BehaviorSubject(null);\n    }\n\n    createColumn(boardId, title, order) {\n      return this.http.post(`${this.base_url}/boards/${boardId}/columns`, {\n        title,\n        order\n      });\n    }\n\n    getColumns(boardId) {\n      this.http.get(`${this.base_url}/boards/${boardId}/columns`).pipe(take(1)).subscribe(res => {\n        this.columns.next(res);\n        console.log(this.columns.value, \" VUe\");\n      });\n    }\n\n    updateColumnSet(updatedColumns) {\n      return this.http.patch(`${this.base_url}/columnsSet`, updatedColumns);\n    }\n\n  }\n\n  ColumnsService.ɵfac = function ColumnsService_Factory(t) {\n    return new (t || ColumnsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ColumnsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ColumnsService,\n    factory: ColumnsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ColumnsService;\n})();","map":null,"metadata":{},"sourceType":"module"}