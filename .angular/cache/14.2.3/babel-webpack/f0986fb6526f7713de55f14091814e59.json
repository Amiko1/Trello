{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"src/app/services/modal.service\";\nimport * as i3 from \"src/app/services/boards.service\";\nimport * as i4 from \"src/app/services/tasks.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../shared/modal/modal.component\";\nimport * as i7 from \"../../shared/input/input.component\";\nimport * as i8 from \"../../shared/alert/alert.component\";\nimport * as i9 from \"../../shared/dropdown/dropdown.component\";\nimport * as i10 from \"@angular/forms\";\n\nfunction TasksModalComponent_app_alert_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"app-alert\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.alertColor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.alertMsg, \" \");\n  }\n}\n\nfunction TasksModalComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const userLogin_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", userLogin_r3, \" \");\n  }\n}\n\nfunction TasksModalComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵlistener(\"click\", function TasksModalComponent_div_16_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const user_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.removeUser(user_r4));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r4, \" \");\n  }\n}\n\nexport let TasksModalComponent = /*#__PURE__*/(() => {\n  class TasksModalComponent {\n    constructor(authService, modal, boardsService, taskService) {\n      this.authService = authService;\n      this.modal = modal;\n      this.boardsService = boardsService;\n      this.taskService = taskService;\n      this.selectedUserLogins = [];\n      this.showAlert = false;\n      this.alertMsg = 'Please wait! Boards is adding';\n      this.alertColor = 'blue';\n      this.title = new FormControl('', [Validators.required, Validators.minLength(3)]);\n      this.description = new FormControl('', [Validators.required, Validators.minLength(3)]);\n      this.createTaskForm = new FormGroup({\n        title: this.title,\n        description: this.description\n      });\n    }\n\n    createTask() {\n      this.modal.toggleModal(\"addTasks\");\n      this.showAlert = true;\n      this.alertMsg = 'Please wait! Task is creating';\n      this.alertColor = 'blue';\n      const {\n        title,\n        description\n      } = this.createTaskForm.value;\n      const task = {\n        boardId: this.boardsId,\n        columnId: this.columnId,\n        title,\n        description,\n        users: this.selectedUserLogins,\n        userId: this.authService.user.value.id,\n        order: 1\n      };\n      this.taskService.createTasks(task).subscribe(res => {\n        this.taskService.tasks.next(res);\n      });\n    }\n\n    removeUser(user) {\n      this.selectedUserLogins = this.selectedUserLogins.filter(login => login !== user);\n      this.userLogins.push(user);\n    }\n\n    onUserClick(event) {\n      const value = event.target.value;\n      this.selectedUserLogins.push(value);\n      this.userLogins = this.userLogins.filter(login => login !== value);\n    }\n\n    ngOnInit() {\n      this.modal.register('addTasks');\n      this.boardsService.takeUsersLogins().subscribe(users => {\n        this.userLogins = users.map(res => res.login);\n      });\n      this.modal.temp.subscribe(temp => this.columnId = temp);\n    }\n\n    ngOnDestroy() {\n      this.modal.unregister('addTasks');\n    }\n\n  }\n\n  TasksModalComponent.ɵfac = function TasksModalComponent_Factory(t) {\n    return new (t || TasksModalComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ModalService), i0.ɵɵdirectiveInject(i3.BoardServices), i0.ɵɵdirectiveInject(i4.TasksService));\n  };\n\n  TasksModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksModalComponent,\n    selectors: [[\"app-tasks-modal\"]],\n    inputs: {\n      boardsId: \"boardsId\"\n    },\n    decls: 19,\n    vars: 7,\n    consts: [[\"modalID\", \"addTasks\"], [3, \"color\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"inline-block\", \"mb-2\"], [\"placeholder\", \"Enter Title\", 3, \"control\"], [\"type\", \"text\", \"placeholder\", \"Enter Description\", 3, \"control\"], [3, \"change\"], [\"value\", \"null\", \"selected\", \"\"], [\"class\", \"cursor-pointer\", 4, \"ngFor\", \"ngForOf\"], [1, \"cursor-pointer\", \"flex\", \"mt-4\", \"flex-wrap\", \"gap-2\"], [\"class\", \"p-2 rounded-md text-white border-dotted border-2 border-indigo-600\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"mt-6\", \"block\", \"w-full\", \"bg-indigo-400\", \"text-white\", \"py-1.5\", \"px-3\", \"rounded\", \"transition\", \"hover:bg-indigo-500\", \"disabled:opacity-50\", \"disabled:bg-indigo-400\", 3, \"disabled\"], [3, \"color\"], [1, \"cursor-pointer\"], [1, \"p-2\", \"rounded-md\", \"text-white\", \"border-dotted\", \"border-2\", \"border-indigo-600\", 3, \"click\"]],\n    template: function TasksModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-modal\", 0);\n        i0.ɵɵtemplate(1, TasksModalComponent_app_alert_1_Template, 2, 2, \"app-alert\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function TasksModalComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.createTask();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Create Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"app-input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"app-input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"app-dropdown\", 7);\n        i0.ɵɵlistener(\"change\", function TasksModalComponent_Template_app_dropdown_change_11_listener($event) {\n          return ctx.onUserClick($event);\n        });\n        i0.ɵɵelementStart(12, \"option\", 8);\n        i0.ɵɵtext(13, \"Select Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, TasksModalComponent_option_14_Template, 2, 1, \"option\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵtemplate(16, TasksModalComponent_div_16_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 12);\n        i0.ɵɵtext(18, \" Submit \");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showAlert);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.createTaskForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"control\", ctx.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"control\", ctx.description);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.userLogins);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.selectedUserLogins);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.createTaskForm.invalid);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i6.ModalComponent, i7.InputComponent, i8.AlertComponent, i9.DropdownComponent, i10.ɵNgNoValidate, i10.NgSelectOption, i10.ɵNgSelectMultipleOption, i10.NgControlStatusGroup, i10.FormGroupDirective]\n  });\n  return TasksModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}